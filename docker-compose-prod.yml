version: '3.4'
services:

  laravel:
    image: ${REGISTRY}:${DOCKER_TAG}
    networks:
      - net-private
    volumes:
      - laravel_data:/var/www/html
    environment:
      - MYSQL_USER=${LARAVEL_DB_USER}
      - MYSQL_PASSWORD=${LARAVEL_DB_PASSWORD}
      - MYSQL_DATABASE=${LARAVEL_DB_NAME}
      - LARAVEL_DB_HOST=${LARAVEL_DB_HOST:-db-server.cett.org.br}
      # - FORCE_MIGRATE=force
      # - FORCE_COMPOSER_UPDATE=yes
      - APP_NAME=${APP_NAME}
      - APP_ENV=production
      - APP_DEBUG=false
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "5"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.workload.prod == yes

  nginx:
    image: nginx:${NGINX_VERSION:-latest}
    networks:
      - traefik-public
      - net-private
    volumes:
      - laravel_data:/var/www/html:ro
    configs:
      - source: nginx_config_template
        target: /etc/nginx/templates/example.conf.template
    environment:
      - SERVER_NAME=${SERVER_NAME}
    depends_on:
      - laravel
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "5"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: "0.4"
          memory: 200M
        reservations:
          cpus: "0.1"
          memory: 50M
      placement:
        constraints:
          - node.labels.workload.prod == yes
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public

        - traefik.http.routers.${APP_TAG}-http.rule=Host(`${SERVER_NAME}`)
        - traefik.http.routers.${APP_TAG}-http.entrypoints=http
        - traefik.http.routers.${APP_TAG}-http.middlewares=https-redirect
        - traefik.http.routers.${APP_TAG}-https.rule=Host(`${SERVER_NAME}`)
        - traefik.http.routers.${APP_TAG}-https.entrypoints=https
        - traefik.http.routers.${APP_TAG}-https.tls=true
        - traefik.http.services.${APP_TAG}.loadbalancer.server.port=80
  
  redis:
    image: docker.io/bitnami/redis:6.2
    networks:
      - net-private
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    # ports:
    #   - '6379:6379'
    volumes:
      - 'redis_data:/bitnami/redis/data'

  scheduler:
    image: ${REGISTRY}:${DOCKER_TAG}
    networks:
      - net-private
    volumes:
      - laravel_data:/var/www/html
    environment:
      - MYSQL_USER=${LARAVEL_DB_USER:-app}
      - MYSQL_PASSWORD=${LARAVEL_DB_USER:-password}
      - MYSQL_DATABASE=${LARAVEL_DB_NAME:-laravel}
      - LARAVEL_DB_HOST=${LARAVEL_DB_HOST:-mysql}
      - CONTAINER_ROLE=scheduler
    depends_on:
      - mysql
      - laravel
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "5"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.workload.prod == yes

  queue-default:
    image: ${REGISTRY}:${DOCKER_TAG}
    networks:
      - net-private
    volumes:
      - laravel_data:/var/www/html
    environment:
      - MYSQL_USER=${LARAVEL_DB_USER:-app}
      - MYSQL_PASSWORD=${LARAVEL_DB_USER:-password}
      - MYSQL_DATABASE=${LARAVEL_DB_NAME:-laravel}
      - LARAVEL_DB_HOST=${LARAVEL_DB_HOST:-mysql}
      - CONTAINER_ROLE=queue
      - QUEUE_NAME=default
    depends_on:
      - mysql
      - laravel
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "5"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.workload.prod == yes

networks:
  traefik-public:
    external: true
  net-private:

volumes:
  laravel_data:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=nfs-server,nolock,soft,rw
      device: ":/data/volume/prod/${APP_TAG}"
  
  redis_data:
    driver: local
    driver_opts:
      type: nfs
      o: nfsvers=4,addr=nfs-server,nolock,soft,rw
      device: ":/data/volume/prod/${APP_TAG}_redis"

configs:
  nginx_config_template:
    external: true
